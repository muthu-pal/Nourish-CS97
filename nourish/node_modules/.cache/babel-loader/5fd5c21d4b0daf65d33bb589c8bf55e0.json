{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bryanluo/Desktop/cs97/Nourish-CS97/nourish/src/Upload.js\",\n    _s = $RefreshSig$();\n\nimport './Upload.css';\nimport Header from './header';\nimport Footer from './footer';\nimport React, { useState, useEffect } from 'react';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useForm } from './util/hooks';\n\nfunction Upload() {\n  _s();\n\n  const {\n    values,\n    onChange,\n    onSubmitForm\n  } = useForm(createPostCallback, {\n    body: '',\n    title: '',\n    caption: '',\n    tagsString: '',\n    tags: []\n  });\n  const [createPost, {\n    error\n  }] = useMutation(CREATE_POST_MUTATION, {\n    variables: values,\n\n    update(_, result) {\n      //console.log(values.tags)\n      values.body = '';\n      values.title = '';\n      values.caption = '';\n      values.tags = [];\n      values.tagsString = '';\n    }\n\n  });\n\n  function createPostCallback() {\n    //console.log(values.tagsString)\n    createPost();\n  }\n\n  const [uploadFile] = useMutation(UPLOAD_FILE, {\n    onCompleted: data => console.log(data)\n  });\n\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n\n    if (!file) {\n      alert(\"cot\");\n      return;\n    }\n\n    uploadFile({\n      variables: {\n        file: file\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Upload file test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"upload-form\",\n        onSubmit: onSubmitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Title:  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            name: \"title\",\n            placeholder: \"title\",\n            value: values.title,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"caption\",\n            children: \"Caption:  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"input\",\n            id: \"caption-input\",\n            name: \"caption\",\n            placeholder: \"caption\",\n            value: values.caption,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"tags\",\n            children: \"Tags:  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            name: \"tagsString\",\n            placeholder: \"tags\",\n            value: values.tagsString,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            children: \"Image:  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            name: \"body\",\n            placeholder: \"image/body\",\n            value: values.body,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-div\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-button\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n} //, $caption: String!, $tags: String!, $image: String!\n\n\n_s(Upload, \"VgfsX0hJ27J8SqFJtP90ekzc2TQ=\", false, function () {\n  return [useForm, useMutation, useMutation];\n});\n\n_c = Upload;\nconst CREATE_POST_MUTATION = gql`\nmutation createPost($body: String!, $title: String!, $caption: String!, $tags: [String]!)\n{\n  createPost(body: $body, title: $title, caption: $caption, tags: $tags){\n    id body title caption tags createdAt\n  }\n}\n`;\nconst UPLOAD_FILE = gql`\n  mutation uploadFile($file: Upload!){\n    uploadFile(file: $file){\n      url\n    }\n  }\n`;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/bryanluo/Desktop/cs97/Nourish-CS97/nourish/src/Upload.js"],"names":["Header","Footer","React","useState","useEffect","gql","useMutation","useForm","Upload","values","onChange","onSubmitForm","createPostCallback","body","title","caption","tagsString","tags","createPost","error","CREATE_POST_MUTATION","variables","update","_","result","uploadFile","UPLOAD_FILE","onCompleted","data","console","log","handleFileChange","e","file","target","files","alert"],"mappings":"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","sourcesContent":["import './Upload.css';\nimport Header from './header';\nimport Footer from './footer';\nimport React, {useState, useEffect} from 'react';\nimport gql from 'graphql-tag';\nimport {useMutation} from '@apollo/react-hooks';\nimport { useForm } from './util/hooks'; \n\n\nfunction Upload() {\n  const {values, onChange, onSubmitForm} = useForm(createPostCallback, { \n    body: '', \n    title: '',\n    caption: '', \n    tagsString: '',\n    tags: [], \n  });\n\n  const[createPost, {error}]= useMutation(CREATE_POST_MUTATION, {\n    variables: values,\n    update(_, result){\n      //console.log(values.tags)\n      values.body = ''\n      values.title = ''\n      values.caption = ''\n      values.tags = []\n      values.tagsString = ''\n    }\n\n\n  })\n\n\n  function createPostCallback(){\n    //console.log(values.tagsString)\n    createPost()\n  }\n\n  const [uploadFile] = useMutation(UPLOAD_FILE,{\n    onCompleted: data => console.log(data)\n  })\n  const handleFileChange = e => {\n\n    const file = e.target.files[0]\n\n    if(!file) {alert(\"cot\"); return;}\n \n    uploadFile({variables: {file: file}})\n\n  }\n  return (\n    <div>\n      <div>\n        <h1>Upload file test</h1>\n        <input type=\"file\" onChange={handleFileChange}/>\n      </div>\n      <Header />\n      <div className=\"upload-container\">\n        <form className=\"upload-form\" onSubmit={onSubmitForm}>\n          <div className=\"input-div\">\n            <label htmlFor='title'>Title:  </label>\n            <input className=\"input\"\n              name='title'\n              placeholder='title'\n              value={values.title}\n              onChange={onChange}\n            />\n          </div>\n          <div className=\"input-div\">\n            <label htmlFor='caption'>Caption:  </label>\n            <textarea className=\"input\" id=\"caption-input\"\n              name='caption'\n              placeholder='caption'\n              value={values.caption}\n              onChange={onChange}\n            />\n          </div>\n          <div className=\"input-div\">\n            <label htmlFor='tags'>Tags:  </label>\n            <input className=\"input\"\n              name='tagsString'\n              placeholder='tags'\n              value={values.tagsString}\n              onChange={onChange}\n            />\n          </div>\n          <div className=\"input-div\">\n            <label htmlFor='image'>Image:  </label>\n            <input className=\"input\"\n              name='body'\n              placeholder='image/body'\n              value={values.body}\n              onChange={onChange}\n            />\n          </div>\n          <div className=\"submit-div\">\n            <button className=\"upload-button\">Submit</button>\n          </div>\n        </form>\n      </div>\n      <Footer />\n    </div>\n  )\n}\n//, $caption: String!, $tags: String!, $image: String!\n\nconst CREATE_POST_MUTATION = gql`\nmutation createPost($body: String!, $title: String!, $caption: String!, $tags: [String]!)\n{\n  createPost(body: $body, title: $title, caption: $caption, tags: $tags){\n    id body title caption tags createdAt\n  }\n}\n`\n\nconst UPLOAD_FILE = gql`\n  mutation uploadFile($file: Upload!){\n    uploadFile(file: $file){\n      url\n    }\n  }\n`;\n\n\nexport default Upload"]},"metadata":{},"sourceType":"module"}