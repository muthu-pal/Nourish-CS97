{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bryanluo/Desktop/cs97/Nourish-CS97/nourish/src/post.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './post.css';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\n\nfunction Post(props) {\n  _s();\n\n  const [likePost] = useMutation(LIKE_POST, {\n    onCompleted: data => console.log(data)\n  }); //  const src = /;\n\n  if (props.image !== '') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./images/' + props.image).default,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title-post\",\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"paragraphs\",\n          children: props.paragraph\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"tags\",\n          children: [\"Tags: \", props.tags.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"likeBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"likeButton\",\n            onClick: likePost({\n              variables: {\n                postId: props.key\n              }\n            }),\n            children: \"Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"likes\",\n            children: [props.likes, \" likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"comment-title\",\n          children: \"COMMENTS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comments\",\n          children: props.comments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-image\",\n        children: \"NO IMAGE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title-post\",\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"paragraphs\",\n          children: props.paragraph\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"tags\",\n          children: [\"Tags: \", props.tags.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"likeBox\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"likeButton\",\n            children: \"Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"likes\",\n            children: [props.likes, \" likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"comment-title\",\n          children: \"COMMENTS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comments\",\n          children: props.comments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Post, \"r44X+c39I6q1E3zLOcqK86bIXW0=\", false, function () {\n  return [useMutation];\n});\n\n_c = Post;\nconst LIKE_POST = gql`\n  mutation likePost($postId: String!){\n    likePost(postId: $postId){\n      id\n    }\n  }\n`;\nexport default Post; //\"https://images.unsplash.com/photo-1498837167922-ddd27525d352?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max\"\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/bryanluo/Desktop/cs97/Nourish-CS97/nourish/src/post.js"],"names":["React","gql","useMutation","Post","props","likePost","LIKE_POST","onCompleted","data","console","log","image","require","default","title","paragraph","tags","toString","variables","postId","key","likes","comments"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './post.css'\nimport gql from 'graphql-tag';\nimport {useMutation} from '@apollo/react-hooks';\n\n\n\nfunction Post(props) {\n  const [likePost] = useMutation(LIKE_POST,{\n    onCompleted: data => console.log(data)\n  })\n  //  const src = /;\n  if(props.image!==''){\n    return (\n      <div className=\"container-post\">\n        <div className=\"post-image\">\n          <img src={require('./images/'+props.image).default} alt=\"\"/>\n\n        </div>\n        <div className=\"post-content\">\n          <h1 className=\"title-post\">{props.title}</h1>\n          <p className=\"paragraphs\">{props.paragraph}</p>\n          <h5 className=\"tags\">Tags: {props.tags.toString()}</h5>\n          <div className=\"likeBox\">\n            <button className=\"likeButton\" onClick={likePost({ variables: { postId: props.key }})}>Like</button> \n            <h5 className=\"likes\">{props.likes} likes</h5>\n          </div>\n          <h5 className=\"comment-title\">COMMENTS</h5>\n          <p className=\"comments\">{props.comments}</p>\n        </div>\n      </div>\n    )\n  }\n  else{\n    return (\n      <div className=\"container-post\">\n        <div className=\"post-image\">\n          NO IMAGE\n\n        </div>\n        <div className=\"post-content\">\n          <h1 className=\"title-post\">{props.title}</h1>\n          <p className=\"paragraphs\">{props.paragraph}</p>\n          <h5 className=\"tags\">Tags: {props.tags.toString()}</h5>\n          <div className=\"likeBox\">\n            <button className=\"likeButton\">Like</button>\n            <h5 className=\"likes\">{props.likes} likes</h5>\n          </div>\n          <h5 className=\"comment-title\">COMMENTS</h5>\n          <p className=\"comments\">{props.comments}</p>\n        </div>\n      </div>\n    )\n  }\n  }\n  \n  const LIKE_POST = gql`\n  mutation likePost($postId: String!){\n    likePost(postId: $postId){\n      id\n    }\n  }\n`\n  export default Post\n\n  //\"https://images.unsplash.com/photo-1498837167922-ddd27525d352?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max\""]},"metadata":{},"sourceType":"module"}