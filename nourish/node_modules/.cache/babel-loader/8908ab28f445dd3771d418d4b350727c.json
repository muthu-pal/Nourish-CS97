{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport const useForm = (callback, initialState = {}) => {\n  _s();\n\n  const [values, setValues] = useState(initialState);\n\n  const onChange = event => {\n    let res = [];\n\n    if (event.target.name === \"tagsString\") {\n      let a = event.target.value;\n      res = a.split(\" \").join(\"\").split(',');\n      let resNoDupes = [...new Set(res)];\n      setValues({ ...values,\n        tagsString: event.target.value,\n        tags: resNoDupes\n      });\n      console.log(resNoDupes);\n    } else {\n      setValues({ ...values,\n        [event.target.name]: event.target.value\n      });\n    }\n  };\n\n  const onSubmit = event => {\n    event.preventDefault(); // onChange(event.target.tags);\n\n    callback();\n  };\n\n  const onSubmitForm = event => {\n    event.preventDefault();\n    callback();\n  };\n\n  return {\n    onChange,\n    onSubmit,\n    onSubmitForm,\n    values\n  };\n};\n\n_s(useForm, \"tR5pueiAhaduWSnglIJ8EBw8xeE=\");","map":{"version":3,"sources":["/Users/bryanluo/Desktop/cs97/Nourish-CS97/nourish/src/util/hooks.js"],"names":["useState","useEffect","useForm","callback","initialState","values","setValues","onChange","event","res","target","name","a","value","split","join","resNoDupes","Set","tagsString","tags","console","log","onSubmit","preventDefault","onSubmitForm"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,YAAY,GAAG,EAA1B,KAAiC;AAAA;;AACtD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAACI,YAAD,CAApC;;AAEA,QAAMG,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAIC,GAAG,GAAG,EAAV;;AACA,QAAID,KAAK,CAACE,MAAN,CAAaC,IAAb,KAAsB,YAA1B,EAAuC;AACrC,UAAIC,CAAC,GAAGJ,KAAK,CAACE,MAAN,CAAaG,KAArB;AACAJ,MAAAA,GAAG,GAAGG,CAAC,CAACE,KAAF,CAAQ,GAAR,EAAaC,IAAb,CAAkB,EAAlB,EAAsBD,KAAtB,CAA4B,GAA5B,CAAN;AACA,UAAIE,UAAU,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQR,GAAR,CAAJ,CAAjB;AACAH,MAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AACRa,QAAAA,UAAU,EAAEV,KAAK,CAACE,MAAN,CAAaG,KADjB;AAERM,QAAAA,IAAI,EAAEH;AAFE,OAAD,CAAT;AAIAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACD,KATD,MAUI;AACJV,MAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AACR,SAACG,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaG;AAD1B,OAAD,CAAT;AAGC;AACF,GAjBD;;AAmBA,QAAMS,QAAQ,GAAId,KAAD,IAAW;AAC1BA,IAAAA,KAAK,CAACe,cAAN,GAD0B,CAE3B;;AACCpB,IAAAA,QAAQ;AACT,GAJD;;AAKA,QAAMqB,YAAY,GAAIhB,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACe,cAAN;AACApB,IAAAA,QAAQ;AACT,GAHD;;AAMA,SAAO;AACLI,IAAAA,QADK;AAELe,IAAAA,QAFK;AAGLE,IAAAA,YAHK;AAILnB,IAAAA;AAJK,GAAP;AAMD,CAvCM;;GAAMH,O","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport const useForm = (callback, initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const onChange = (event) => {\n    let res = [];\n    if (event.target.name === \"tagsString\"){\n      let a = event.target.value;\n      res = a.split(\" \").join(\"\").split(',');\n      let resNoDupes = [...new Set(res)];\n      setValues({ ...values, \n        tagsString: event.target.value,\n        tags: resNoDupes\n      });\n      console.log(resNoDupes);\n    }\n    else{\n    setValues({ ...values, \n      [event.target.name]: event.target.value\n    });\n    }\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n   // onChange(event.target.tags);\n    callback();\n  };\n  const onSubmitForm = (event) => {\n    event.preventDefault();\n    callback();\n  };\n  \n  \n  return {\n    onChange,\n    onSubmit,\n    onSubmitForm,\n    values\n  };\n};\n\n\n"]},"metadata":{},"sourceType":"module"}