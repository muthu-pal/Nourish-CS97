{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bryanluo/Desktop/cs97/Nourish-CS97/nourish/src/Upload.js\",\n    _s = $RefreshSig$();\n\nimport './Upload.css';\nimport Header from './header';\nimport Footer from './footer';\nimport React, { useState, useEffect } from 'react';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useForm } from './util/hooks';\n\nfunction Upload() {\n  _s();\n\n  const {\n    values,\n    onChange,\n    onSubmitForm\n  } = useForm(createPostCallback, {\n    title: '',\n    caption: '',\n    tagsString: '',\n    tags: [],\n    imageName: ''\n  });\n  const [createPost, {\n    error\n  }] = useMutation(CREATE_POST_MUTATION, {\n    variables: values,\n\n    update(_, result) {\n      //console.log(values.tags)\n      values.title = '';\n      values.caption = '';\n      values.tags = [];\n      values.tagsString = '';\n      values.imageName = '';\n    }\n\n  });\n\n  const dealWithFileAndSubmit = () => {\n    handleFileSubmit();\n    onSubmitForm();\n  };\n\n  function createPostCallback() {\n    //console.log(values.tagsString)\n    createPost();\n  } ///upload stuff//\n\n\n  const [uploadFile] = useMutation(UPLOAD_FILE, {\n    onCompleted: data => console.log(data)\n  });\n\n  const handleFileSubmit = () => {\n    const file = document.getElementById('fileInput').files[0];\n    if (!file) return;\n    uploadFile({\n      variables: {\n        file\n      }\n    });\n  }; ///end of upload stuff////\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"upload-form\",\n        onSubmit: onSubmitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Title:  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            name: \"title\",\n            placeholder: \"title\",\n            value: values.title,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"caption\",\n            children: \"Caption:  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"input\",\n            id: \"caption-input\",\n            name: \"caption\",\n            placeholder: \"caption\",\n            value: values.caption,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"tags\",\n            children: \"Tags:  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            name: \"tagsString\",\n            placeholder: \"tags\",\n            value: values.tagsString,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            children: \"Image:  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            name: \"imageName\",\n            placeholder: \"name of file please\",\n            value: values.imageName,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"fileInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-div\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-button\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n} //, $caption: String!, $tags: String!, $image: String!\n\n\n_s(Upload, \"VgfsX0hJ27J8SqFJtP90ekzc2TQ=\", false, function () {\n  return [useForm, useMutation, useMutation];\n});\n\n_c = Upload;\nconst CREATE_POST_MUTATION = gql`\nmutation createPost($title: String!, $caption: String!, $tags: [String]!, $imageName: String!)\n{\n  createPost(title: $title, caption: $caption, tags: $tags, imageName: $imageName){\n    id title caption tags createdAt imageName\n  }\n}\n`;\nconst UPLOAD_FILE = gql`\n  mutation uploadFile($file: Upload!){\n    uploadFile(file: $file){\n      url\n    }\n  }\n`;\nexport default Upload;\n/*\nA potential problem with image uploading. First of all, it doesn't check file type yet. Also,\nsay you upload filename.jpg. It'll always go to the image folder. However, localhost:5000/filename.jpg\nwill lead to the GraphQL play ground, not the image. The tutorial here\nhttps://www.youtube.com/watch?v=BcZ_ItGplfE uses Apollo server express to fix this. \nThis led to compilation errors for me. I don't think it matters though, we can just\naccess the image via. /images/filename.jpg. Also, we'll probably put these images\nto an external source anyways. \nAlso, a potential probelm is that the filenames aren't randomized (may be private\n  or may lead to duplicates). Tutorial goes over how to fix this. */\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/bryanluo/Desktop/cs97/Nourish-CS97/nourish/src/Upload.js"],"names":["Header","Footer","React","useState","useEffect","gql","useMutation","useForm","Upload","values","onChange","onSubmitForm","createPostCallback","title","caption","tagsString","tags","imageName","createPost","error","CREATE_POST_MUTATION","variables","update","_","result","dealWithFileAndSubmit","handleFileSubmit","uploadFile","UPLOAD_FILE","onCompleted","data","console","log","file","document","getElementById","files"],"mappings":"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","sourcesContent":["import './Upload.css';\nimport Header from './header';\nimport Footer from './footer';\nimport React, {useState, useEffect} from 'react';\nimport gql from 'graphql-tag';\nimport {useMutation} from '@apollo/react-hooks';\nimport { useForm } from './util/hooks'; \n\n\nfunction Upload() {\n  const {values, onChange, onSubmitForm} = useForm(createPostCallback, { \n    title: '',\n    caption: '', \n    tagsString: '',\n    tags: [], \n    imageName: '',\n  });\n\n  const[createPost, {error}]= useMutation(CREATE_POST_MUTATION, {\n    variables: values,\n    update(_, result){\n      //console.log(values.tags)\n      values.title = ''\n      values.caption = ''\n      values.tags = []\n      values.tagsString = ''\n      values.imageName = ''\n    }\n\n\n  })\n\n  const dealWithFileAndSubmit = () => {\n    handleFileSubmit();\n    onSubmitForm(); \n  }\n\n  function createPostCallback(){\n    //console.log(values.tagsString)\n    createPost()\n  }\n\n  \n  ///upload stuff//\n  const [uploadFile] = useMutation(UPLOAD_FILE,{\n    onCompleted: data => console.log(data)\n  })\n  const handleFileSubmit = () => {\n    const file = document.getElementById('fileInput').files[0]\n    if(!file) return\n    uploadFile({ variables: { file }})\n  }\n  ///end of upload stuff////\n  return (\n    <div>\n      <Header />\n      <div className=\"upload-container\">\n        <form className=\"upload-form\" onSubmit={onSubmitForm}>\n          <div className=\"input-div\">\n            <label htmlFor='title'>Title:  </label>\n            <input className=\"input\"\n              name='title'\n              placeholder='title'\n              value={values.title}\n              onChange={onChange}\n            />\n          </div>\n          <div className=\"input-div\">\n            <label htmlFor='caption'>Caption:  </label>\n            <textarea className=\"input\" id=\"caption-input\"\n              name='caption'\n              placeholder='caption'\n              value={values.caption}\n              onChange={onChange}\n            />\n          </div>\n          <div className=\"input-div\">\n            <label htmlFor='tags'>Tags:  </label>\n            <input className=\"input\"\n              name='tagsString'\n              placeholder='tags'\n              value={values.tagsString}\n              onChange={onChange}\n            />\n          </div>\n          <div className=\"input-div\">\n            <label htmlFor='image'>Image:  </label>\n            <input className=\"input\"\n              name='imageName'\n              placeholder='name of file please'\n              value={values.imageName}\n              onChange={onChange}\n            />\n            <input type=\"file\" id=\"fileInput\"/>\n          </div>\n          <div className=\"submit-div\">\n            <button className=\"upload-button\">Submit</button>\n          </div>\n        </form>\n      </div>\n      <Footer />\n    </div>\n  )\n}\n//, $caption: String!, $tags: String!, $image: String!\n\nconst CREATE_POST_MUTATION = gql`\nmutation createPost($title: String!, $caption: String!, $tags: [String]!, $imageName: String!)\n{\n  createPost(title: $title, caption: $caption, tags: $tags, imageName: $imageName){\n    id title caption tags createdAt imageName\n  }\n}\n`\n\nconst UPLOAD_FILE = gql`\n  mutation uploadFile($file: Upload!){\n    uploadFile(file: $file){\n      url\n    }\n  }\n`\n\n\nexport default Upload\n\n/*\nA potential problem with image uploading. First of all, it doesn't check file type yet. Also,\nsay you upload filename.jpg. It'll always go to the image folder. However, localhost:5000/filename.jpg\nwill lead to the GraphQL play ground, not the image. The tutorial here\nhttps://www.youtube.com/watch?v=BcZ_ItGplfE uses Apollo server express to fix this. \nThis led to compilation errors for me. I don't think it matters though, we can just\naccess the image via. /images/filename.jpg. Also, we'll probably put these images\nto an external source anyways. \nAlso, a potential probelm is that the filenames aren't randomized (may be private\n  or may lead to duplicates). Tutorial goes over how to fix this. */ "]},"metadata":{},"sourceType":"module"}