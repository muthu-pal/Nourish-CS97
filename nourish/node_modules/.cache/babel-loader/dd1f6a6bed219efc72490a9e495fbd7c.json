{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bryanluo/Desktop/cs97/Nourish-CS97/nourish/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport './Upload.css';\nimport Header from './header';\nimport Footer from './footer';\nimport React, { useContext, useState } from 'react';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useForm } from './util/hooks';\nimport { AuthContext } from './context/auth';\n\nfunction Login(props) {\n  _s();\n\n  const context = useContext(AuthContext);\n  const [errors, setErrors] = useState({});\n  const {\n    onChange,\n    onSubmit,\n    values\n  } = useForm(loginUserCallback, {\n    username: '',\n    password: ''\n  });\n  const [loginUser, {\n    loading\n  }] = useMutation(LOGIN_USER, {\n    update(_, {\n      data: {\n        login: userData\n      }\n    }) {\n      window.alert(\"You've been logged in. Go to the home page.\");\n      context.login(userData);\n    },\n\n    onError(err) {\n      setErrors(err.graphQLErrors[0].extensions.exception.errors);\n    },\n\n    variables: values\n  });\n\n  function loginUserCallback() {\n    loginUser();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"upload-form\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username:  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            name: \"username\",\n            placeholder: \"username\",\n            value: values.username,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password:  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            name: \"password\",\n            placeholder: \"password\",\n            value: values.password,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-div\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-button\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), Object.keys(errors).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: Object.values(errors).map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: value\n          }, value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"exenV4i3hsmyHghAOFiQc3yik/o=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = Login;\nconst LOGIN_USER = gql`\n  mutation login($username: String! $password: String!) {\n    login(username: $username password: $password) \n    {\n      id username createdAt token\n    }\n  }\n`;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/bryanluo/Desktop/cs97/Nourish-CS97/nourish/src/Login.js"],"names":["Header","Footer","React","useContext","useState","gql","useMutation","useForm","AuthContext","Login","props","context","errors","setErrors","onChange","onSubmit","values","loginUserCallback","username","password","loginUser","loading","LOGIN_USER","update","_","data","login","userData","window","alert","onError","err","graphQLErrors","extensions","exception","variables","Object","keys","length","map","value"],"mappings":"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","sourcesContent":["import './Upload.css';\nimport Header from './header';\nimport Footer from './footer';\nimport React, { useContext, useState } from 'react';\nimport gql from 'graphql-tag';\nimport {useMutation} from '@apollo/react-hooks';\nimport { useForm } from './util/hooks';\nimport { AuthContext } from './context/auth';\n\nfunction Login(props) {\n    const context = useContext(AuthContext)\n    const [errors, setErrors] = useState({})\n\n    const { onChange, onSubmit, values } = useForm(loginUserCallback, {\n        username: '', \n        password: ''\n    })\n\n    const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n      update(_, { data: { login: userData}}){\n        window.alert(\"You've been logged in. Go to the home page.\")\n        context.login(userData)\n      },\n      onError(err){\n        setErrors(err.graphQLErrors[0].extensions.exception.errors);\n      },\n      variables: values\n    });\n\n    function loginUserCallback(){\n        loginUser();\n    }\n\n      return (\n        <div>\n          <Header />\n          <div className=\"upload-container\">\n            <form className=\"upload-form\" onSubmit={onSubmit}>\n              <div className=\"input-div\">\n                <label htmlFor='username'>Username:  </label>\n                <input className=\"input\"\n                  name='username'\n                  placeholder='username'\n                  value={values.username}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"input-div\">\n                <label htmlFor='password'>Password:  </label>\n                <input className=\"input\"\n                  name='password'\n                  placeholder='password'\n                  value={values.password}\n                  onChange={onChange}\n                />\n              </div>\n              <div className=\"submit-div\">\n                <button className=\"upload-button\">Submit</button>\n              </div>\n            </form>\n            {Object.keys(errors).length > 0 && (\n                <div>\n                  <ul className=\"list\">\n                    {Object.values(errors).map((value) => (\n                      <li key={value}>{value}</li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n          </div>\n          <Footer />\n        </div>\n      )\n}\n\nconst LOGIN_USER = gql`\n  mutation login($username: String! $password: String!) {\n    login(username: $username password: $password) \n    {\n      id username createdAt token\n    }\n  }\n`\nexport default Login;"]},"metadata":{},"sourceType":"module"}