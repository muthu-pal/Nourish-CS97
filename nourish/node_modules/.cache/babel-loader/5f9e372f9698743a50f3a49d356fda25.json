{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bryanluo/Desktop/cs97/Nourish-CS97/nourish/src/Upload.js\",\n    _s = $RefreshSig$();\n\nimport './Upload.css';\nimport Header from './header';\nimport Footer from './footer';\nimport React, { useState } from 'react';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { useForm } from './util/hooks'; // export default class Upload extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = { title: '', caption: '', tags: '', image: '' }\n//     this.handleChange = this.handleChange.bind(this)\n//     this.handleSubmit = this.handleSubmit.bind(this)\n//   }\n//   handleSubmit(event) {\n//     const { title, caption, tags, image } = this.state\n//     event.preventDefault()\n//     alert(` \n//           ____Your Details____\\n \n//           title : ${title} \n//           caption : ${caption} \n//           tags : ${tags} \n//           image : ${image} \n//         `)\n//     this.setState({ title: '', caption: '', tags: '', image: '' })\n//   }\n//   handleChange(event) {\n//     this.setState({\n//       [event.target.name]: event.target.value\n//     })\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <Header />\n//         <div className=\"upload-container\">\n//           <form className=\"upload-form\" onSubmit={this.handleSubmit}>\n//             <div className=\"input-div\">\n//               <label htmlFor='title'>Title:  </label>\n//               <input className=\"input\"\n//                 name='title'\n//                 placeholder='title'\n//                 value={this.state.title}\n//                 onChange={this.handleChange}\n//               />\n//             </div>\n//             <div className=\"input-div\">\n//               <label htmlFor='caption'>Caption:  </label>\n//               <textarea className=\"input\" id=\"caption-input\"\n//                 name='caption'\n//                 placeholder='caption'\n//                 value={this.state.caption}\n//                 onChange={this.handleChange}\n//               />\n//             </div>\n//             <div className=\"input-div\">\n//               <label htmlFor='tags'>Tags:  </label>\n//               <input className=\"input\"\n//                 name='tags'\n//                 placeholder='tags'\n//                 value={this.state.tags}\n//                 onChange={this.handleChange}\n//               />\n//             </div>\n//             <div className=\"input-div\">\n//               <label htmlFor='image'>Image:  </label>\n//               <input className=\"input\"\n//                 name='image'\n//                 placeholder='image'\n//                 value={this.state.image}\n//                 onChange={this.handleChange}\n//               />\n//             </div>\n//             <div className=\"submit-div\">\n//               <button className=\"upload-button\">Submit</button>\n//             </div>\n//           </form>\n//         </div>\n//         <Footer />\n//       </div>\n//     )\n//   }\n// }\n\nfunction Upload() {\n  _s();\n\n  const {\n    values,\n    onChange,\n    onSubmit\n  } = useForm(createPostCallback, {\n    body: '' // caption: '', \n    // tags: '', \n    // image: '' \n\n  });\n  const [createPost, {\n    error\n  }] = useMutation(CREATE_POST_MUTATION, {\n    variables: values,\n\n    update(_, result) {\n      console.log(result);\n      values.body = '';\n    }\n\n  });\n\n  function createPostCallback() {\n    createPost();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"upload-form\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Title:  \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            name: \"body\",\n            placeholder: \"title\",\n            value: values.body,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit-div\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"upload-button\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n} //, $caption: String!, $tags: String!, $image: String!\n\n\n_s(Upload, \"uzwwG0wGxh+E5xy3QANLFRcL2U8=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = Upload;\nconst CREATE_POST_MUTATION = gql`\nmutation createPost($body: String!)\n{\n  createPost(body: $body){\n    id body createdAt\n  }\n}\n`;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/bryanluo/Desktop/cs97/Nourish-CS97/nourish/src/Upload.js"],"names":["Header","Footer","React","useState","gql","useMutation","useForm","Upload","values","onChange","onSubmit","createPostCallback","body","createPost","error","CREATE_POST_MUTATION","variables","update","_","result","console","log"],"mappings":";;;;;AAAA,OAAO,cAAP;AACA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAASC,OAAT,QAAwB,cAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAGhB,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAA+BJ,OAAO,CAACK,kBAAD,EAAqB;AAC/DC,IAAAA,IAAI,EAAE,EADyD,CAE/D;AACA;AACA;;AAJ+D,GAArB,CAA5C;AAOA,QAAK,CAACC,UAAD,EAAa;AAACC,IAAAA;AAAD,GAAb,IAAuBT,WAAW,CAACU,oBAAD,EAAuB;AAC5DC,IAAAA,SAAS,EAAER,MADiD;;AAE5DS,IAAAA,MAAM,CAACC,CAAD,EAAIC,MAAJ,EAAW;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAX,MAAAA,MAAM,CAACI,IAAP,GAAc,EAAd;AACD;;AAL2D,GAAvB,CAAvC;;AAUA,WAASD,kBAAT,GAA6B;AAC3BE,IAAAA,UAAU;AACX;;AACD,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,QAAQ,EAAEH,QAAxC;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,SAAS,EAAC,OAAjB;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,WAAW,EAAC,OAFd;AAGE,YAAA,KAAK,EAAEF,MAAM,CAACI,IAHhB;AAIE,YAAA,QAAQ,EAAEH;AAJZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAqCE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBArCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eA6CE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YA7CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiDD,C,CACD;;;GAzESF,M;UAG8BD,O,EAOTD,W;;;KAVrBE,M;AA2ET,MAAMQ,oBAAoB,GAAGX,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AAUA,eAAeG,MAAf","sourcesContent":["import './Upload.css';\nimport Header from './header';\nimport Footer from './footer';\nimport React, {useState} from 'react';\nimport gql from 'graphql-tag';\nimport {useMutation} from '@apollo/react-hooks';\nimport { useForm } from './util/hooks'; \n\n// export default class Upload extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = { title: '', caption: '', tags: '', image: '' }\n//     this.handleChange = this.handleChange.bind(this)\n//     this.handleSubmit = this.handleSubmit.bind(this)\n//   }\n\n\n//   handleSubmit(event) {\n//     const { title, caption, tags, image } = this.state\n//     event.preventDefault()\n//     alert(` \n//           ____Your Details____\\n \n//           title : ${title} \n//           caption : ${caption} \n//           tags : ${tags} \n//           image : ${image} \n//         `)\n//     this.setState({ title: '', caption: '', tags: '', image: '' })\n//   }\n\n\n//   handleChange(event) {\n//     this.setState({\n\n//       [event.target.name]: event.target.value\n//     })\n//   }\n\n\n//   render() {\n//     return (\n//       <div>\n//         <Header />\n//         <div className=\"upload-container\">\n//           <form className=\"upload-form\" onSubmit={this.handleSubmit}>\n//             <div className=\"input-div\">\n//               <label htmlFor='title'>Title:  </label>\n//               <input className=\"input\"\n//                 name='title'\n//                 placeholder='title'\n//                 value={this.state.title}\n//                 onChange={this.handleChange}\n//               />\n//             </div>\n//             <div className=\"input-div\">\n//               <label htmlFor='caption'>Caption:  </label>\n//               <textarea className=\"input\" id=\"caption-input\"\n//                 name='caption'\n//                 placeholder='caption'\n//                 value={this.state.caption}\n//                 onChange={this.handleChange}\n//               />\n//             </div>\n//             <div className=\"input-div\">\n//               <label htmlFor='tags'>Tags:  </label>\n//               <input className=\"input\"\n//                 name='tags'\n//                 placeholder='tags'\n//                 value={this.state.tags}\n//                 onChange={this.handleChange}\n//               />\n//             </div>\n//             <div className=\"input-div\">\n//               <label htmlFor='image'>Image:  </label>\n//               <input className=\"input\"\n//                 name='image'\n//                 placeholder='image'\n//                 value={this.state.image}\n//                 onChange={this.handleChange}\n//               />\n//             </div>\n//             <div className=\"submit-div\">\n//               <button className=\"upload-button\">Submit</button>\n//             </div>\n//           </form>\n//         </div>\n//         <Footer />\n//       </div>\n//     )\n//   }\n// }\n\nfunction Upload() {\n\n\n  const {values, onChange, onSubmit} = useForm(createPostCallback, { \n    body: '', \n    // caption: '', \n    // tags: '', \n    // image: '' \n  });\n\n  const[createPost, {error}]= useMutation(CREATE_POST_MUTATION, {\n    variables: values,\n    update(_, result){\n      console.log(result)\n      values.body = ''\n    }\n\n\n  })\n\n  function createPostCallback(){\n    createPost()\n  }\n  return (\n    <div>\n      <Header />\n      <div className=\"upload-container\">\n        <form className=\"upload-form\" onSubmit={onSubmit}>\n          <div className=\"input-div\">\n            <label htmlFor='title'>Title:  </label>\n            <input className=\"input\"\n              name='body'\n              placeholder='title'\n              value={values.body}\n              onChange={onChange}\n            />\n          </div>\n          {/* <div className=\"input-div\">\n            <label htmlFor='caption'>Caption:  </label>\n            <textarea className=\"input\" id=\"caption-input\"\n              name='caption'\n              placeholder='caption'\n              value={this.state.caption}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-div\">\n            <label htmlFor='tags'>Tags:  </label>\n            <input className=\"input\"\n              name='tags'\n              placeholder='tags'\n              value={this.state.tags}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"input-div\">\n            <label htmlFor='image'>Image:  </label>\n            <input className=\"input\"\n              name='image'\n              placeholder='image'\n              value={this.state.image}\n              onChange={this.handleChange}\n            />\n          </div> */}\n          <div className=\"submit-div\">\n            <button className=\"upload-button\">Submit</button>\n          </div>\n        </form>\n      </div>\n      <Footer />\n    </div>\n  )\n}\n//, $caption: String!, $tags: String!, $image: String!\n\nconst CREATE_POST_MUTATION = gql`\nmutation createPost($body: String!)\n{\n  createPost(body: $body){\n    id body createdAt\n  }\n}\n`\n\n\nexport default Upload"]},"metadata":{},"sourceType":"module"}