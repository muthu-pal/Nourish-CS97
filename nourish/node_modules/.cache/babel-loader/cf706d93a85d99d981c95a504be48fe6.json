{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bryanluo/Desktop/cs97/Nourish-CS97/nourish/src/post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport './post.css';\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/react-hooks';\nimport { AuthContext } from './context/auth';\n\nfunction Post(props) {\n  _s();\n\n  const {\n    user\n  } = useContext(AuthContext);\n  const [liked, setLiked] = useState(false);\n  useEffect(() => {\n    if (user && props.likes.find(like => like.username === user.username)) {\n      setLiked(true);\n    } else setLiked(false);\n  }, [user, props.likes]);\n  const [likePost] = useMutation(LIKE_POST, {\n    variables: {\n      postId: props.id\n    }\n  });\n  const likeButton = user ? liked ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"likeBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"likeButton\",\n      onClick: likePost,\n      style: {\n        backgroundColor: \"#F44336\",\n        color: \"white\"\n      },\n      children: \"Liked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"likes\",\n      children: [props.likes.length, \" likes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"likeBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"likeButton\",\n      onClick: likePost,\n      style: {\n        backgroundColor: \"white\",\n        color: \"#F44336\"\n      },\n      children: \"Like\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"likes\",\n      children: [props.likes.length, \" likes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"likeBox-notLoggedIn\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"paragraphLikeBox\",\n      children: \"Log in to like posts.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"likes\",\n      children: [props.likes.length, \" likes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n\n  if (props.image !== '') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require('./images/' + props.image).default,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title-post\",\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"paragraphs\",\n          children: props.paragraph\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"tags\",\n          children: [\"Tags: \", props.tags.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), likeButton, /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"comment-title\",\n          children: \"COMMENTS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comments\",\n          children: props.comments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-post\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-image\",\n        children: \"NO IMAGE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title-post\",\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"paragraphs\",\n          children: props.paragraph\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"tags\",\n          children: [\"Tags: \", props.tags.toString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), likeButton, /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"comment-title\",\n          children: \"COMMENTS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comments\",\n          children: props.comments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Post, \"iqU1WZMgSWKOc3JRBzioqmkpsMg=\", false, function () {\n  return [useMutation];\n});\n\n_c = Post;\nconst LIKE_POST = gql`\n  mutation likePost($postId: ID!){\n    likePost(postId: $postId){\n      id\n      likes{\n        id username\n      }\n    }\n  }\n`;\nexport default Post; //\"https://images.unsplash.com/photo-1498837167922-ddd27525d352?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max\"\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/bryanluo/Desktop/cs97/Nourish-CS97/nourish/src/post.js"],"names":["React","useContext","useEffect","useState","gql","useMutation","AuthContext","Post","props","user","liked","setLiked","likes","find","like","username","likePost","LIKE_POST","variables","postId","id","likeButton","backgroundColor","color","length","image","require","default","title","paragraph","tags","toString","comments"],"mappings":"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","sourcesContent":["import React , { useContext, useEffect, useState } from 'react';\nimport './post.css'\nimport gql from 'graphql-tag';\nimport {useMutation} from '@apollo/react-hooks';\nimport { AuthContext } from './context/auth'; \n\nfunction Post(props) {\n\n  const { user } = useContext(AuthContext);\n\n  const [liked, setLiked] = useState(false);\n\n  useEffect(() => {\n    if (user && props.likes.find((like) => like.username === user.username)) {\n      setLiked(true);\n    } else setLiked(false);\n  }, [user, props.likes]);\n\n  const [likePost] = useMutation(LIKE_POST,{\n    variables: { postId: props.id }\n  })\n\n  const likeButton = \n  user ? (\n    liked ? (\n      <div className=\"likeBox\">\n        <button className=\"likeButton\" onClick={likePost} style={{backgroundColor:\"#F44336\", color:\"white\"}}>Liked</button> \n        <h5 className=\"likes\">{props.likes.length} likes</h5>\n      </div>\n    ) : (\n      <div className=\"likeBox\">\n        <button className=\"likeButton\" onClick={likePost} style={{backgroundColor:\"white\", color:\"#F44336\"}}>Like</button> \n        <h5 className=\"likes\">{props.likes.length} likes</h5>\n      </div>\n    )\n  ) : (\n    <div className=\"likeBox-notLoggedIn\">\n        <p className=\"paragraphLikeBox\">Log in to like posts.</p> \n        <h5 className=\"likes\">{props.likes.length} likes</h5>\n      </div>\n  );\n\n\n  if(props.image!==''){\n    return (\n      <div className=\"container-post\">\n        <div className=\"post-image\">\n          <img src={require('./images/'+props.image).default} alt=\"\"/>\n\n        </div>\n        <div className=\"post-content\">\n          <h1 className=\"title-post\">{props.title}</h1>\n          <p className=\"paragraphs\">{props.paragraph}</p>\n          <h5 className=\"tags\">Tags: {props.tags.toString()}</h5>\n          {likeButton}\n          <h5 className=\"comment-title\">COMMENTS</h5>\n          <p className=\"comments\">{props.comments}</p>\n        </div>\n      </div>\n    )\n  }\n  else{\n    return (\n      <div className=\"container-post\">\n        <div className=\"post-image\">\n          NO IMAGE\n\n        </div>\n        <div className=\"post-content\">\n          <h1 className=\"title-post\">{props.title}</h1>\n          <p className=\"paragraphs\">{props.paragraph}</p>\n          <h5 className=\"tags\">Tags: {props.tags.toString()}</h5>\n          {likeButton}\n          <h5 className=\"comment-title\">COMMENTS</h5>\n          <p className=\"comments\">{props.comments}</p>\n        </div>\n      </div>\n    )\n  }\n  }\n  \n  const LIKE_POST = gql`\n  mutation likePost($postId: ID!){\n    likePost(postId: $postId){\n      id\n      likes{\n        id username\n      }\n    }\n  }\n`\n  export default Post\n\n  //\"https://images.unsplash.com/photo-1498837167922-ddd27525d352?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max\""]},"metadata":{},"sourceType":"module"}